group 'com.sdyk.ai'
version '1.0.12-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

mainClassName = 'com.sdyk.ai.crawler.specific.zbj.Scheduler'

applicationDefaultJvmArgs = ["-Xms200m", "-Xmx4000m", "-Dsun.net.inetaddr.ttl=-1", "-Djava.net.preferIPv4Stack=true", "-Dlog4j.configurationFile=log4j2.xml", "-Dfile.encoding=UTF8", "-Djdk.http.auth.tunneling.disabledSchemes=\"\"", "-Djava.library.path=/opt/opencv-3.4.1/build/lib"]

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.0.1"
    }
}

repositories {

    jcenter()
    maven {
        url "http://repo.maven.apache.org/maven2"
    }
    maven {
        url "https://jitpack.io"
    }
    maven {
        url "http://10.0.0.56:8081/artifactory/libs-snapshot-local/"
        credentials {
            username "dev"
            password "develop"
        }
    }
    flatDir {
        dirs 'lib'
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

artifactory {

    contextUrl = 'http://10.0.0.56:8081/artifactory'
    publish {
        repository {
            repoKey = 'libs-snapshot-local'
            username = artifactory_username
            password = artifactory_password
        }
        snapshotRepository {
            repoKey = 'libs-snapshot-local'
            username = artifactory_username
            password = artifactory_password
        }
        defaults {

            publications('mavenJava')

            publishArtifacts = true

            properties = ['qa.level': 'basic', 'q.os': 'linux', 'dev.team': 'core']
            publishPom = true
        }
    }
}

dependencies {

    compile 'one.rewind:common:1.1.35-SNAPSHOT'

    //compile name: 'opencv-341'

    compile group: 'org.elasticsearch.client', name: 'transport', version: '6.2.4'

    // https://mvnrepository.com/artifact/com.1stleg/jnativehook
    compile group: 'com.1stleg', name: 'jnativehook', version: '2.1.0'

    // https://mvnrepository.com/artifact/it.sauronsoftware.cron4j/cron4j
    compile group: 'it.sauronsoftware.cron4j', name: 'cron4j', version: '2.2.5'

    // https://mvnrepository.com/artifact/com.aliyun/aliyun-java-sdk-core
    compile group: 'com.aliyun', name: 'aliyun-java-sdk-core', version: '3.2.8'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'

    // https://mvnrepository.com/artifact/com.aliyun/aliyun-java-sdk-ecs
    compile group: 'com.aliyun', name: 'aliyun-java-sdk-ecs', version: '4.5.0'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    runtime 'mysql:mysql-connector-java:5.1.37'
}

task copyFiles(group: 'tetra') << {
    copy {
        from 'chromedriver'
        into 'src/main/dist'
    }
    copy {
        from 'cacerts'
        into 'src/main/dist'
    }
    copy {
        from fileTree('src/main/resources')
        into 'src/main/dist'
    }
    copy {
        from 'squid.sh'
        into 'src/main/dist'
    }
    copy {
        from 'gcy-docker.pem'
        into 'src/main/dist'
    }
    copy {
        from 'docker.pem'
        into 'src/main/dist'
    }
    copy {
        from 'lib'
        into 'src/main/dist'
    }
}

jar.dependsOn copyFiles

startScripts {
    doLast {
        def winScriptFile  = file getWindowsScript()
        def winFileText = winScriptFile.text
        winFileText = winFileText.replaceAll('set CLASSPATH=.*', '@rem original CLASSPATH declaration replaced by:\nset CLASSPATH=%APP_HOME%\\\\lib\\\\\\*')
        winFileText = winFileText.replaceAll('@rem Set local scope', '\n@ping 127.0.0.1 -n 3 >nul\n@rem Set local scope')
        winScriptFile.text = winFileText

        def unixScriptFile  = file getUnixScript()
        def unixFileText = unixScriptFile.text
        unixFileText = unixFileText.replaceAll('APP_NAME', 'sleep 3\nAPP_NAME')
        unixScriptFile.text = unixFileText
    }
}